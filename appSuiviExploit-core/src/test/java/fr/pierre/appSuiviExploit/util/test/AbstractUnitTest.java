package fr.pierre.appSuiviExploit.util.test;

import java.io.InputStreamReader;
import java.io.Reader;
import java.sql.SQLException;

import javax.sql.DataSource;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.dbunit.DatabaseUnitException;
import org.dbunit.database.DatabaseConfig;
import org.dbunit.database.DatabaseConnection;
import org.dbunit.database.IDatabaseConnection;
import org.dbunit.dataset.IDataSet;
import org.dbunit.dataset.datatype.IDataTypeFactory;
import org.dbunit.dataset.xml.XmlDataSet;
import org.dbunit.operation.DatabaseOperation;
import org.junit.After;
import org.junit.Before;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations={"/applicationContext-dao.xml"})
public abstract class AbstractUnitTest {
    	
	@Autowired
	DataSource dataSourceProxy;

	@Autowired
	IDataTypeFactory dataTypeFactory;
	
	/**
	 * The logger.
	 */
	public static final Log LOGGER = LogFactory.getLog(AbstractUnitTest.class);
	
	/**
	 * the dbUnitConnection.
	 */
	private IDatabaseConnection dbUnitConnection;

	/**
	 * the dataSet.
	 */
	private IDataSet dataSet;
	
	/**
	 * Path to DBUnit data file (XMLDataset format)
	 * @return String
	 */
	protected abstract String getXmlDataSetResourceName();
	
	
	/**
	 * Set up database with unit test datas.
	 * @throws Exception : erreur a la creation du setUp()
	 */
	@Before
    public void setUp() throws Exception {
		LOGGER.info("setup database clean insert");
		dbUnitConnection = new DatabaseConnection(dataSourceProxy.getConnection());

		DatabaseConfig config = dbUnitConnection.getConfig();
		if (dataTypeFactory != null) {
			config.setProperty(DatabaseConfig.PROPERTY_DATATYPE_FACTORY,
					dataTypeFactory);
		}

		final String resourceName = getXmlDataSetResourceName();
		final Reader reader = new InputStreamReader(getClass().getResourceAsStream(
				resourceName));
		dataSet = new XmlDataSet(reader);
		
		DatabaseOperation.CLEAN_INSERT.execute(dbUnitConnection, dataSet);
    }

	/**
	 * Tear down unit test datas in database.
	 * @throws SQLException : erreur SQL
	 * @throws DatabaseUnitException : erreur de BDD
	 */
    @After
    public void tearDown() throws DatabaseUnitException, SQLException {
		LOGGER.info("after transaction delete all");
		if (dataSet != null) {
			//DatabaseOperation.DELETE_ALL.execute(dbUnitConnection, dataSet);
		}
    }
}