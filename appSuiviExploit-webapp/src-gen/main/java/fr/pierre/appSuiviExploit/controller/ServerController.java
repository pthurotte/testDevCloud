package fr.pierre.appSuiviExploit.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import fr.pierre.appSuiviExploit.dto.ServeurDto;
import fr.pierre.appSuiviExploit.form.ServeurForm;
import fr.pierre.appSuiviExploit.services.IServeurService;


@Controller
@RequestMapping({"/server"})
public class ServerController {
	
	@Autowired
	private IServeurService serveurServ;
	
	
	@ModelAttribute("listeServeur")
	public List<ServeurDto> peuplerListeServeur(){
		return serveurServ.getListAllServer();
	}
	
	@RequestMapping(method = RequestMethod.GET)
	public String home(){
		return "server";
	}

	@ModelAttribute("ServeurForm")
	public ServeurForm createServeurForm(){
		ServeurForm form=new ServeurForm();
		return form;
	}
	
	@RequestMapping(value="/create")
	public String create(Model model){
		return "server/create";
	}
	
	@RequestMapping(method = RequestMethod.POST)
	public String addServeur(@Valid @ModelAttribute("serveurForm") ServeurForm pServeurForm, BindingResult result){
		
		if(result.hasErrors()){
			return "server/create";
		}
		
		ServeurDto serveurDto = new ServeurDto();
		serveurDto.setNom(pServeurForm.getNom());
		serveurDto.setIp(pServeurForm.getIp());
		serveurServ.addServer(serveurDto);
		return "redirect:/server";
	}
	
	@RequestMapping(value="/{number}/edit", method=RequestMethod.GET)
	public String editServeur(@PathVariable String number, Model model){
		ServeurDto serveurDto = serveurServ.getServerByIdx(Long.valueOf(number));
		
		ServeurForm serveurForm=new ServeurForm();
		serveurForm.setIp(serveurDto.getIp());
		serveurForm.setNom(serveurDto.getNom());
		serveurForm.setIdx(serveurDto.getIdx());
		
		model.addAttribute(serveurForm);
		
		return "server/edit";
	}
	
	@RequestMapping(method = RequestMethod.PUT)
	public String updateServeur(@Valid @ModelAttribute("serveurForm") ServeurForm pServeurForm, BindingResult result){
		if(result.hasErrors()){
			return "server/edit";
		}
		
		ServeurDto serveurDto = new ServeurDto();
		serveurDto.setIdx(pServeurForm.getIdx());
		serveurDto.setNom(pServeurForm.getNom());
		serveurDto.setIp(pServeurForm.getIp());
		serveurServ.updateServer(serveurDto);
		return "redirect:/server";
	}
	
	@RequestMapping(value="/{number}/delete", method=RequestMethod.DELETE)
	public @ResponseBody String deleteServeur(@PathVariable String number, Model model){
		serveurServ.deleteServer(Long.valueOf(number));
		return "redirect:/server";
		
	}
	
//	@RequestMapping(value="/{number}/delete", method=RequestMethod.DELETE)
//	public String deleteServeur(@PathVariable String number, Model model){
//		serveurServ.deleteServer(Long.valueOf(number));
//		return "redirect:/server";
//		
//	}
}
